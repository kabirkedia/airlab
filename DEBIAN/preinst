#!/bin/bash
set -e  # Exit on any error

# Function to handle errors
error_handler() {
    local line_number=$1
    local error_code=$2
    echo "Error occurred in line ${line_number} with exit code ${error_code}"
    exit ${error_code}
}

trap 'error_handler ${LINENO} $?' ERR

# Check if running as root/sudo
if [ "$EUID" -ne 0 ]; then
    echo "This script must be run as root or with sudo privileges"
    exit 1
fi

ARCH=$(uname -m)
if [ -z "$ARCH" ]; then
    echo "Failed to determine system architecture"
    exit 1
fi

# Docker key check and installation
DOCKER_KEY="/usr/share/keyrings/docker-archive-keyring.gpg"
if [ -f "$DOCKER_KEY" ]; then
    echo "Docker GPG key already exists, skipping..."
else
    echo "Adding Docker's official GPG key..."
    if ! curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o "$DOCKER_KEY"; then
        echo "Warning: Failed to add Docker GPG key. Continuing..."
    fi
fi

# Check Docker repository
DOCKER_LIST="/etc/apt/sources.list.d/docker.list"
if [ -f "$DOCKER_LIST" ]; then
    echo "Docker repository already configured, skipping..."
else
    echo "Adding Docker's official repository for architecture $ARCH..."
    if ! echo "deb [arch=$ARCH signed-by=$DOCKER_KEY] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | \
        sudo tee "$DOCKER_LIST" > /dev/null; then
        echo "Warning: Failed to add Docker repository. Continuing..."
    fi
fi

# NVIDIA key check and installation
NVIDIA_KEY="/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg"
if [ -f "$NVIDIA_KEY" ]; then
    echo "NVIDIA GPG key already exists, skipping..."
else
    echo "Adding NVIDIA Container Toolkit GPG key..."
    if ! curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o "$NVIDIA_KEY"; then
        echo "Warning: Failed to add NVIDIA GPG key. Continuing..."
    fi
fi

# Check NVIDIA repository
NVIDIA_LIST="/etc/apt/sources.list.d/nvidia-container-toolkit.list"
if [ -f "$NVIDIA_LIST" ]; then
    echo "NVIDIA repository already configured, skipping..."
else
    echo "Adding NVIDIA Container Toolkit repository..."
    if ! curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
        sed 's#deb https://#deb [signed-by='$NVIDIA_KEY'] https://#g' | \
        sudo tee "$NVIDIA_LIST"; then
        echo "Warning: Failed to add NVIDIA repository. Continuing..."
    fi
fi

# Verify pip3 is executable
PIP_PATH=$(which pip3)
if [ ! -x "$PIP_PATH" ]; then
    echo "pip3 is not executable. Please check permissions."
    exit 1
fi

# Install PIP packages with error checking
PIP_PACKAGES="pyyaml vcstool"
echo "Installing PIP packages..."
for pkg in $PIP_PACKAGES; do
    if ! pip3 show "$pkg" &>/dev/null; then
        echo "Installing $pkg..."
        if ! pip3 install "$pkg"; then
            echo "Failed to install $pkg"
            exit 1
        fi
    else
        echo "$pkg is already installed."
    fi
done


echo "Installation completed successfully"
